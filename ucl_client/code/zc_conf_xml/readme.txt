/*
 *  Created on: 2017-7-30
 *      Author: Oneway
 */
zcConf.xml是对统一ZC目标对象标识编码体系的xml描述。
以Code部分topic域定义为例进行说明：

以下为标准文档中的内容：
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    标准文档中关于域的取值有如下定义：
        分成两个部分：第一部分共4位（第0 ～ 3位）；第二部分共28位（第4 ～ 31位）。
        第一部分，
            第0位，有2种二进制取值，其中：
                0表示第二部分记录的是一个大众话题，
                1表示第二部分记录的是一个小众话题；
            第1 ～ 3位，保留，含义暂未定义。
        第二部分，28位所能表示的十进制数范围为0 ～ 268,435,455（即2^28 – 1），其中：
            0 ～ 254保留，含义暂未定义；255表示“其他”；
            其余每个数字对应一个具体的话题。
    
    标准文档中有如下注解：
    统一ZC目标对象编码体系中，
    第二部分取256表示下级向上级汇报，272表示上级向下级发送指令，288表示同级信息采集消息传递。其他取值保留，可更据需求扩展。
    话题是UCL代码部分直接反映内容要义和主题的关键语义信息域，也是引领内容聚敛、分发以及与用
    户兴趣进行匹配的语义聚类抽象。具体话题由该域第二部分描述，它的含义与该域第一部分第0位的取值有关，其中：
    0表示第二部分的取值对应于大众话题映射表中的一个话题；
    1表示第二部分的取值对应于小众话题映射表中的一个话题。

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        
        为了便于将UCL标准文档中的定义转化为XML形式表示，定义最小比特单元（Minimum Bits Unit, MBU）,
        MBU是指标准文档中做出解释的最短比特位（长度至少为一位），MBU可解释，不可拆分。
        对应于topic域的取值定义：
            存在如下三个MBU：
                1、第一部分第0位，长1位。
                2、第一部分第1~3位，长3位。
                3、第二部分第4~31位，长28位。
       
       对于topic域，在zcConf.xml中做出如下表示：     
===========================================================================
<?xml version="1.0" encoding="UTF-8"?>  
  <uclcode><!-- UCL Code开始部分 -->
     
    <!-- topic -->  <!-- 注释部分 -->
    
    <topic> <!-- topic域开始部分，注：“topic”与UCLFormatMap.h中CODE_NAME中各域的NAME定义一致 -->
        
        <!-- 具体元素按照如下形式定义: 
        %s_%u_%llu 
        第一个字符串与UCLFormatMap.h中CODE_NAME中各域的INITIAL定义一致；
        中间的无符号数表示MBU的在域中的顺序（与标准文档一致，从1开始）；
        最后的无符号数表示该MBU的十进制值。
         -->
    
        <!-- 第一个MBU，对应于第一部分第0位 -->
        <t_1_0>Common Topic</t_1_0><!-- 定义了topic域第一个MBU取0时的解释（即第一部分第0位） -->
        <t_1_1>Small Minority Topic</t_1_1>
        
        <!-- 标准文档中topic域第二个MBU保留，故此处不需定义，如果取第二个MBU的xml元素，则显示XMLTools.h中的UNDF_INFO -->

        <!-- 第三个MBU，由于标准文档暂未定义大众话题映射表和小众话题映射表，因此第一个MBU取0或1并不影响第3个MBU的解析
        有两种方式可以扩展为两个话题映射表：1、生成两个xml文件分别对应大众话题映射表和小众话题映射表，根据第一个MBU的取值
        分别在不同的xml中解析；2、将第一个MBU的值与第三个MBU的值组合起来作为xml元素的名（%s_%u_%llu ）中最后一个无符号数。
         -->
        <t_3_256>Subordinate Report to Superior</t_3_256><!-- 定义了topic域第三个MBU取256时的解释 -->
        <t_3_272>Command To Subordinate From Superior</t_3_272>
        <t_3_288>Information Collection</t_3_288>
 
    </topic> <!-- topic域结束部分 -->
    
  </uclcode>    <!-- UCL Code结束部分 -->
===========================================================================